#set up compiler and related compile parameter
CC?=gcc

HEADER_DIR = /usr
#!/bin/bash
CFLAGS += -I$(HEADER_DIR)/include/json-c -I$(HEADER_DIR)/include/i386-linux-gnu/ -I$(HEADER_DIR)/include/ -I$(HEADER_DIR)/local/ssl/lib
LDFLAGS+= -pthread -D_SVID_SOURCE -std=gnu99 -L$(HEADER_DIR)/lib  -lssl -lcrypto -ljson-c

#debug needs to be excluded so as to run makefile in degug dir in last step
SUBDIRS=$(shell ls -l | grep ^d | awk '{if($$9 != "debug") print $$9}')
#the cmd followed is not neccesary
#DEBUG=$(shell ls -l | grep ^d | awk '{if($$9 == "debug") print $$9}')
#record root directory
ROOT_DIR=$(shell pwd)
#excutable file name  which can be name by ur own will
BIN=serialtoeth.bin
#the directory where the object files stays
OBJS_DIR=debug/obj
#the directory where the final exutable file generated
BIN_DIR=debug/bin
#echo current c files into environment varies CUR_SOURCE
CUR_SOURCE=${wildcard *.c}
#echo object files tranlated from c files by cmd patsubst  
CUR_OBJS=${patsubst %.c, %.o, $(CUR_SOURCE)}
#export environment below to shell so that it can be herited by makfile contained by child folder
export CC BIN OBJS_DIR BIN_DIR ROOT_DIR CFLAGS LDFLAGS
#pay attention to  conqequnce processed by  complier SUBDIRS first,DEBUG in the end
all:$(SUBDIRS) $(CUR_OBJS) DEBUG

#check out child folder recursively   
$(SUBDIRS):ECHO
#create debug/obj folder is no exsisted
	@if [ -d "$(ROOT_DIR)/$(OBJS_DIR)" ]; then  echo "$(ROOT_DIR)/$(OBJS_DIR) exsisted"; else mkdir $(ROOT_DIR)/$(OBJS_DIR); fi
	@if [ -d "$(ROOT_DIR)/$(BIN_DIR)" ]; then  echo "$(ROOT_DIR)/$(BIN_DIR) exsisted"; else mkdir $(ROOT_DIR)/$(BIN_DIR); fi
	@echo "prepare folder done"
	make -C $@
DEBUG:ECHO
    #cd debug and run makefile inside it
	make -C debug
ECHO:
	@echo $(SUBDIRS)
#compile c files to  objetct ones which then are placed into  OBJS_DIR
$(CUR_OBJS):%.o:%.c
	$(CC) -o $(ROOT_DIR)/$(OBJS_DIR)/$@ -c $^  $(LDFLAGS) $(CFLAGS)
CLEAN:
	@rm $(OBJS_DIR)/*.o
	@rm -rf $(BIN_DIR)/*
